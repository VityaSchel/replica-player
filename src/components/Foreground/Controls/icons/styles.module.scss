@import './animations.module.scss';

.playPause {
  fill: currentColor;

  &.play {
    animation-name: iconAnimation__play;
    animation-direction: normal;
    @include animatedIcon;
  }

  &.pause {
    animation-name: iconAnimation__pause;
    @include animatedIcon;
  }
}

.clipPath {
  transform: translate(0px, 0px);
  transition: transform 300ms linear;
  will-change: transform;

  &.muted {
    transform: translate(20px, 20px);
  }
}

.volume {
  &.from2to1 {
    animation-name: iconAnimation__volume2to1;
    @include animatedIcon;
  }
  
  &.from1to2 {
    animation-name: iconAnimation__volume1to2;
    @include animatedIcon;
  }
  
  &.from1toMute {
    animation-name: iconAnimation__volume1toMute;
    @include animatedIcon;
  }
  
  &.fromMuteTo1 {
    animation-name: iconAnimation__volumeMuteTo1;
    @include animatedIcon;
  }
}

.settings {
  transition: transform .1s cubic-bezier(0.4, 0, 1, 1);
  transform: rotateZ(0deg);

  &.active {
    transform: rotateZ(30deg);
  }
}

.fullscreen {
  $distace: 1px;

  path {
    fill: #fff;
  }

  .corner0,
  .corner1,
  .corner2,
  .corner3 {
    transform: translate(0px, 0px);
    // transition: transform .4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  &:hover {
    .corner0 {
      animation: corner0-animation .4s cubic-bezier(0.4, 0, 0.2, 1);

      @keyframes corner0-animation {
        50% {
          transform: translate(-$distace, -$distace);
        }
      }
    }

    .corner1 {
      animation: corner1-animation .4s cubic-bezier(0.4, 0, 0.2, 1);

      @keyframes corner1-animation {
        50% {
          transform: translate($distace, -$distace);
        }
      }
    }

    .corner2 {
      animation: corner2-animation .4s cubic-bezier(0.4, 0, 0.2, 1);

      @keyframes corner2-animation {
        50% {
          transform: translate($distace, $distace);
        }
      }
    }

    .corner3 {
      animation: corner3-animation .4s cubic-bezier(0.4, 0, 0.2, 1);

      @keyframes corner3-animation {
        50% {
          transform: translate(-$distace, $distace);
        }
      }
    }
  }
}